{"version":3,"sources":["active-page.js"],"names":["homeBtnEl","document","querySelector","libraryBtnEl","sectionEl","initialize","home","library","section","onHomeBtnActive","string","classList","contains","innerHTML","add","remove","onLibraryBtnActive"],"mappings":";AAkDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACQA,UAAWC,SAASC,cAAc,aAClCC,aAAcF,SAASC,cAAc,gBACrCE,UAAWH,SAASC,cAAc,YAEtCG,WAAYC,EAAMC,EAASC,GAClBR,KAAAA,UAAYC,SAASC,kBAAkBI,KACvCH,KAAAA,aAAeF,SAASC,kBAAkBK,KAC1CH,KAAAA,UAAYH,SAASC,kBAAkBM,MAGhDC,gBAAiBC,GACR,KAAKV,UAAUW,UAAUC,SAAS,YAC9BR,KAAAA,UAAUS,UAAYH,EACtBV,KAAAA,UAAUW,UAAUG,IAAI,UACxBX,KAAAA,aAAaQ,UAAUI,OAAO,YAI3CC,mBAAoBN,GACX,KAAKP,aAAaQ,UAAUC,SAAS,YACjCR,KAAAA,UAAUS,UAAYH,EACtBV,KAAAA,UAAUW,UAAUI,OAAO,UAC3BZ,KAAAA,aAAaQ,UAAUG,IAAI,aAvB5C,QAAA,QAAA","file":"active-page.14dfa4d2.js","sourceRoot":"../src","sourcesContent":["// Как это работает?\n// 1. Необходимо импортировать сервис в свой js файл \n// Например: import yourName from \"./active-page\" (* yourName - ваше придуманное имя для работы с сервисом).\n\n// 2. С помощью метода --> initialize() <-- Инициализировать, т.е передать сервису свои ДОМ данные о кнопках и разметке - где отображается страничка.\n//   Метод принимает три параметра:\n//     1. Класс кнопки HOME.\n//     2. Класс кнопки LIBRARY.\n//     3. Класс дива, секции, списка - в котором будет отображаться разметка.\n//   Например: yourName.initialize('btn-home','btn-library','gallery'). \n//   Именно эти классы из примера, и стоят по умолчанию. Можно использовать и их, предварительно прописав в разметке.\n//   В таком случае шаг инициализации можно пропустить. Свои же классы необходимо передавать без точек, в формате строки.\n\n// 3. На кнопки homeBtnEl и libraryBtnEl [ВАЖНО: Необходимо использовать исключительно эти названия кнопок т.к сервис сам ищет элементы ДОМа, повторно это делать не нужно] повесить прослушивателя событий 'click',\n//    и вызывать методы   --> onHomeBtnActive() и onLibraryBtnActive() соответственно <--. Методы принимают один параметр - это ваша шаблонная строка для разметки в HTML.\n\n//    Например: \n\n//    yourName.homeBtnEl.addEventListener('click', () => {\n\n    // yourName.onHomeBtnActive(`\n    //     <ul>\n    //         <li style=\"margin-bottom: 20px\">\n    //             <p>Избранное (картинка)</p>\n    //             <p>Избранное 1</p>\n    //         </li>\n    //         <li style=\"margin-bottom: 20px\">\n    //             <p>Избранное (картинка)</p>\n    //             <p>Избранное 2</p>\n    //         </li>\n    //         <li style=\"margin-bottom: 20px\">\n    //             <p>Избранное (картинка)</p>\n    //             <p>Избранное 3</p>\n    //         </li>\n    //     </ul>\n    //                 `)\n\n//     }); \n\n\n// или в качестве переменной:\n\n// const string = `У сороконожки 20 писек`\n\n// yourName.homeBtnEl.addEventListener('click', () => {\n//     yourName.onHomeBtnActive(string);\n// }); \n\n\nexport default\n{\n        homeBtnEl: document.querySelector('.btn-home'),\n        libraryBtnEl: document.querySelector('.btn-library'),\n        sectionEl: document.querySelector('.gallery'),\n\n    initialize (home, library, section) {\n        this.homeBtnEl = document.querySelector(`.${home}`);\n        this.libraryBtnEl = document.querySelector(`.${library}`);\n        this.sectionEl = document.querySelector(`.${section}`);\n    },\n\n    onHomeBtnActive (string) {\n        if (!this.homeBtnEl.classList.contains('active')) {\n            this.sectionEl.innerHTML = string;\n            this.homeBtnEl.classList.add('active');\n            this.libraryBtnEl.classList.remove('active');\n        }\n    },\n\n    onLibraryBtnActive (string) {\n        if (!this.libraryBtnEl.classList.contains('active')) {\n            this.sectionEl.innerHTML = string;\n            this.homeBtnEl.classList.remove('active');\n            this.libraryBtnEl.classList.add('active');\n        }\n    },\n  \n};\n\n\n\n\n\n\n\n\n\n"]}