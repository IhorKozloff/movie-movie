{"version":3,"sources":["js/API.js","js/refs.js","js/genres.js","js/HtmlMacker.js","js/modal-inform-window.js","index.js"],"names":["API","APIKEY","searchAPIName","name","fetch","then","response","json","data","results","searchAPITop","searchAPIbyID","movieID","refs","galeryEl","document","querySelector","searchFormEl","homeBtnEl","GENRES","id","makerAndRender","releaseDateConverter","dateString","slice","genreСonverter","genresDataCollection","map","item","genreItem","join","movieCardMaker","poster_path","title","genre_ids","release_date","vote_average","onCardClick","event","target","nodeName","idToSearch","dataset","result","insertAdjacentHTML","modalWindowRender","addEventListener","onModalWindowCloseBtn","original_title","popularity","genres","vote_count","overview","modalWindowGenresConverter","className","remove","removeEventListener","beginingInterface","moviesRenderOnPage","innerHTML","reduce","forRender","onSubmitSearchForm","e","preventDefault","searchedMovie","currentTarget","elements","movie","value","console","log","onStart","onHomeBtn","window","location","reload"],"mappings":"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","file":"src.583fab6a.js","sourceRoot":"../src","sourcesContent":["export const API = {\n    APIKEY: \"8b9c2b35d1bc0d9e8879c4faa9dd8b75\",\n\n    searchAPIName (name) {\n        return fetch(`https://api.themoviedb.org/3/search/movie?api_key=8b9c2b35d1bc0d9e8879c4faa9dd8b75&query=${name}`).then(response => response.json()).then(data => data.results) \n    },\n    searchAPITop () {\n       return fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=8b9c2b35d1bc0d9e8879c4faa9dd8b75`).then(response => response.json()).then(data => data.results)\n    },\n    searchAPIbyID (movieID) {\n       return fetch(`https://api.themoviedb.org/3/movie/${movieID}?api_key=8b9c2b35d1bc0d9e8879c4faa9dd8b75&language=en-US`).then(response => response.json()).then(data => data);\n      \n    },\n};\n\n\n\n\n\n","\nexport const refs = {\n    galeryEl: document.querySelector('.gallery1'),\n    searchFormEl: document.querySelector('.header-form'),\n    homeBtnEl: document.querySelector('[data-navBtn=\"home\"]')\n};","export const GENRES = [\n    {id: 28, name: 'Action'},\n    {id: 12, name: 'Adventure'},\n    {id: 16, name: 'Animation'},\n    {id: 35, name: 'Comedy'},\n    {id: 80, name: 'Crime'},\n    {id: 99, name: 'Documentary'},\n    {id: 18, name: 'Drama'},\n    {id: 10751, name: 'Family'},\n    {id: 14, name: 'Fantasy'},\n    {id: 36, name: 'History'},\n    {id: 27, name: 'Horror'},\n    {id: 10402, name: 'Music'},\n    {id: 9648, name: 'Mystery'},\n    {id: 10749, name: 'Romance'},\n    {id: 878, name: 'Science Fiction'},\n    {id: 10770, name: 'TV Movie'},\n    {id: 53, name: 'Thriller'},\n    {id: 10752, name: 'War'},\n    {id: 37, name: 'Western'},\n  ]","import { GENRES } from './genres' \n\nexport const makerAndRender = {\n    releaseDateConverter (dateString) {\n        return dateString.slice(0, 4);\n    },\n    \n    genreСonverter (genresDataCollection) {\n        return genresDataCollection.map(item => {\n          for (const genreItem of GENRES) {\n            if (item === genreItem.id) {\n              return genreItem.name;\n            }\n          }\n        }).join(\", \");\n        \n    },\n    \n    movieCardMaker ({poster_path, title, genre_ids, release_date, vote_average, id}) {\n      \n        return  `\n                <div class=\"card\">\n                    <img src=https://image.tmdb.org/t/p/w500${poster_path} width=\"280\" height=\"398\" data-id=\"${id}\">\n                    <div class=\"card__description\">\n                      <h4 class=\"movie-name\">${title}</h4>\n                      <div class=\"movie-spesification\">\n                        <span class=\"movie-genre\">${makerAndRender.genreСonverter(genre_ids)}</span>\n                        <span class=\"movie-release-delimeter\"></span>\n                        <span class=\"movie-release\">${makerAndRender.releaseDateConverter(release_date)}</span>\n                        <span class=\"movie-rating\">${vote_average}</span>\n                      </div>\n                    </div>\n                </div>\n        `\n    },\n    \n    \n};","import { API } from './API'\nimport { refs } from './refs';\n\nexport function onCardClick (event) {\n  if (event.target.nodeName !== \"IMG\") {\n    return;\n  }\n  const idToSearch = event.target.dataset.id;\n\n  API.searchAPIbyID(idToSearch).then(result => {\n      \n    refs.galeryEl.insertAdjacentHTML(\"afterbegin\", modalWindowRender(result));\n      \n  });\n  refs.galeryEl.addEventListener('click', onModalWindowCloseBtn);\n};\n\nfunction modalWindowRender ({poster_path, original_title, popularity, genres, vote_average, vote_count, overview}) {\n  return `\n    <div class=\"modal-overlay\">\n      <div class=\"modal-inform-movie\">\n        <button type=\"button\" class=\"modal-btn-close\">X</button>\n      <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"\" width=\"400px\" height=\"477px\">\n      <div class=\"inform-block\">\n        <h2>${original_title}</h2>\n        <ul class=\"movie-inform\">\n          <li class=\"inform-item\">\n            <p class=\"item-name\">Vote / Votes</p>\n            <span class=\"item-value\">${vote_average} / ${vote_count}</span>\n          </li>\n          <li class=\"inform-item\">\n            <p class=\"item-name\">Popularity</p>\n            <span class=\"item-value\">${popularity}</span>\n          </li>\n          <li class=\"inform-item\">\n            <p class=\"item-name\">Original Title</p>\n            <span class=\"item-value\">${original_title}</span>\n          </li>\n          <li class=\"inform-item\">\n            <p class=\"item-name\">Genre</p>\n            <span class=\"item-value\">${modalWindowGenresConverter(genres)}</span>\n          </li>\n        </ul>\n        \n        <div class=\"movie-description\">\n          <p>About </p>\n          <p class=\"description-text\">${overview}</p>\n        </div>\n        <div class=\"infrom-btns-wrapper\">\n          <button type=\"button\" class=\"inform-btn\" data-inform-btn=\"watched\">add to Watched </button>\n          <button type=\"button\" class=\"inform-btn\" data-inform-btn=\"queue\">queue</button>\n        </div>\n      </div>\n      </div>\n    </div>\n `\n};\n \nfunction modalWindowGenresConverter (data) {\n  return data.map(item => {\n    return item.name\n  }).join(\", \");\n};  \n\nfunction onModalWindowCloseBtn (event) {\n  if (event.target.className !== 'modal-btn-close') {\n    return\n  }\n  document.querySelector('.modal-overlay').remove();\n  refs.galeryEl.removeEventListener('click', onModalWindowCloseBtn);\n};","import { API } from './js/API';\nimport { refs } from './js/refs';\nimport { makerAndRender } from './js/HtmlMacker';\nimport { onCardClick } from './js/modal-inform-window';\n\n\nconst beginingInterface = {\n\n  moviesRenderOnPage (data) {\n    refs.galeryEl.innerHTML = data.reduce((forRender, item) => {\n      return forRender += makerAndRender.movieCardMaker(item);\n    }, \"\");\n  },\n  \n  onSubmitSearchForm (e) {\n    e.preventDefault();\n   \n    const searchedMovie = e.currentTarget.elements.movie.value;\n    console.log(searchedMovie)\n      \n    API.searchAPIName(searchedMovie).then(result => {\n      console.log(result[0])\n      moviesRenderOnPage(result);\n    });\n  },\n  \n  \n  onStart () {\n    API.searchAPITop().then(result => {\n      this.moviesRenderOnPage(result);\n      \n    });\n  },\n  \n  \n  onHomeBtn () {\n    window.location.reload()\n  },\n  \n  \n  \n};\n\nrefs.searchFormEl.addEventListener('submit', beginingInterface.onSubmitSearchForm);\nrefs.homeBtnEl.addEventListener('click', beginingInterface.onHomeBtn);\nrefs.galeryEl.addEventListener('click', onCardClick);\n\n\n\nbeginingInterface.onStart();\n"]}